eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/code-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/components\');\n    test(\'ember-cli-qunit/components/code-section.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/components/code-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/code-section.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/markdown-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/components\');\n    test(\'ember-cli-qunit/components/markdown-section.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/components/markdown-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/markdown-section.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/components\');\n    test(\'ember-cli-qunit/components/section.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/components/section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/section.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/mixins/with-delayed-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/mixins\');\n    test(\'ember-cli-qunit/mixins/with-delayed-property.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/mixins/with-delayed-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/mixins/with-delayed-property.jshint.js");

;eval("define(\"dummy/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=dummy/app.js");

;eval("define(\"dummy/components/code-section\", \n  [\"ember-marked/components/code-section\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var CodeSectionComponent = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = CodeSectionComponent;\n  });//# sourceURL=dummy/components/code-section.js");

;eval("define(\"dummy/components/markdown-section\", \n  [\"ember-marked/components/markdown-section\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var MarkdownSectionComponent = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = MarkdownSectionComponent;\n  });//# sourceURL=dummy/components/markdown-section.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/code-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/components\');\n    test(\'ember-cli-content-security-policy/components/code-section.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/components/code-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/code-section.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/markdown-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/components\');\n    test(\'ember-cli-content-security-policy/components/markdown-section.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/components/markdown-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/markdown-section.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/components\');\n    test(\'ember-cli-content-security-policy/components/section.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/components/section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/section.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/mixins/with-delayed-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/mixins\');\n    test(\'ember-cli-content-security-policy/mixins/with-delayed-property.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/mixins/with-delayed-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/mixins/with-delayed-property.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/components/code-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/components\');\n    test(\'ember-export-application-global/components/code-section.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/components/code-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/components/code-section.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/components/markdown-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/components\');\n    test(\'ember-export-application-global/components/markdown-section.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/components/markdown-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/components/markdown-section.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/components/section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/components\');\n    test(\'ember-export-application-global/components/section.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/components/section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/components/section.jshint.js");

;eval("define(\"dummy/ember-export-application-global/tests/ember-export-application-global/mixins/with-delayed-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-export-application-global/mixins\');\n    test(\'ember-export-application-global/mixins/with-delayed-property.js should pass jshint\', function() { \n      ok(true, \'ember-export-application-global/mixins/with-delayed-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-export-application-global/tests/ember-export-application-global/mixins/with-delayed-property.jshint.js");

;eval("define(\"dummy/ember-marked/tests/ember-marked/components/code-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-marked/components\');\n    test(\'ember-marked/components/code-section.js should pass jshint\', function() { \n      ok(true, \'ember-marked/components/code-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-marked/tests/ember-marked/components/code-section.jshint.js");

;eval("define(\"dummy/ember-marked/tests/ember-marked/components/markdown-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-marked/components\');\n    test(\'ember-marked/components/markdown-section.js should pass jshint\', function() { \n      ok(true, \'ember-marked/components/markdown-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-marked/tests/ember-marked/components/markdown-section.jshint.js");

;eval("define(\"dummy/ember-marked/tests/ember-marked/components/section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-marked/components\');\n    test(\'ember-marked/components/section.js should pass jshint\', function() { \n      ok(true, \'ember-marked/components/section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-marked/tests/ember-marked/components/section.jshint.js");

;eval("define(\"dummy/ember-marked/tests/ember-marked/mixins/with-delayed-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-marked/mixins\');\n    test(\'ember-marked/mixins/with-delayed-property.js should pass jshint\', function() { \n      ok(true, \'ember-marked/mixins/with-delayed-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-marked/tests/ember-marked/mixins/with-delayed-property.jshint.js");

;eval("define(\"dummy/initializers/export-application-global\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=dummy/initializers/export-application-global.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/components/code-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/components\');\n    test(\'live-reload-middleware/components/code-section.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/components/code-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/components/code-section.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/components/markdown-section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/components\');\n    test(\'live-reload-middleware/components/markdown-section.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/components/markdown-section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/components/markdown-section.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/components/section.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/components\');\n    test(\'live-reload-middleware/components/section.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/components/section.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/components/section.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/mixins/with-delayed-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/mixins\');\n    test(\'live-reload-middleware/mixins/with-delayed-property.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/mixins/with-delayed-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/mixins/with-delayed-property.jshint.js");

;eval("define(\"dummy/router\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=dummy/router.js");

;eval("define(\"dummy/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* globals hljs */\n    var Ember = __dependency1__[\"default\"];\n\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      model: function () {\n        if (typeof hljs !== \'undefined\') {\n          return Ember.A(hljs.listLanguages());\n        }\n        else {\n          return Ember.A();\n        }\n      },\n\n      setupController: function (controller) {\n        this._super.apply(this, arguments);\n        controller.set(\'markdownSource\', \'# Some title\\n---\\nHello **you**!\');\n        controller.set(\'codeSource\', \'if (a === b) {\\n  alert(\"hello\");\\n}\');\n      }\n    });\n  });//# sourceURL=dummy/routes/application.js");

;eval("define(\"dummy/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h2 id=\\\"title\\\">ember-marked</h2>\\n\\n<section>\\n  <header>Markdown example</header>\\n  <div>\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"markdownSource\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"</div>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'markdown-section\'] || (depth0 && depth0[\'markdown-section\']),options={hash:{\n        \'content\': (\"markdownSource\")\n      },hashTypes:{\'content\': \"ID\"},hashContexts:{\'content\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"markdown-section\", options))));\n      data.buffer.push(\"\\n</section>\\n<hr class=\\\"split\\\"/>\\n<section>\\n  <header>Code section example</header>\\n  <div>\\n    \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'content\': (\"\"),\n        \'value\': (\"codeLanguage\"),\n        \'prompt\': (\"[auto]\")\n      },hashTypes:{\'content\': \"ID\",\'value\': \"ID\",\'prompt\': \"STRING\"},hashContexts:{\'content\': depth0,\'value\': depth0,\'prompt\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n    <span>Language used: <code>\");\n      stack1 = helpers._triageMustache.call(depth0, \"codeDetectedLanguage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</code></span>\\n  </div>\\n  <div>\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"codeSource\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"</div>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'code-section\'] || (depth0 && depth0[\'code-section\']),options={hash:{\n        \'content\': (\"codeSource\"),\n        \'language\': (\"codeLanguage\"),\n        \'detectedLanguage\': (\"codeDetectedLanguage\")\n      },hashTypes:{\'content\': \"ID\",\'language\': \"ID\",\'detectedLanguage\': \"ID\"},hashContexts:{\'content\': depth0,\'language\': depth0,\'detectedLanguage\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"code-section\", options))));\n      data.buffer.push(\"\\n</section>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/application.js");

;eval("define(\"dummy/templates/components/code-section\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"handlebarsHtml\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/components/code-section.js");

;eval("define(\"dummy/templates/components/markdown-section\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"handlebarsHtml\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/components/markdown-section.js");

;eval("define(\"dummy/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/resolver.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/start-app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests\');\n    test(\'dummy/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/test-helper.jshint.js");

;eval("define(\"dummy/tests/helpers/resolver\", \n  [\"ember/resolver\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=dummy/tests/helpers/resolver.js");

;eval("define(\"dummy/tests/helpers/start-app\", \n  [\"ember\",\"dummy/app\",\"dummy/router\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=dummy/tests/helpers/start-app.js");

;eval("define(\"dummy/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/router.jshint.js");

;eval("define(\"dummy/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(true, \'routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/routes/application.jshint.js");

;eval("define(\"dummy/tests/test-helper\", \n  [\"dummy/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=dummy/tests/test-helper.js");

/* jshint ignore:start */

define('dummy/config/environment', ['ember'], function(Ember) {
  var prefix = 'dummy';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require('dummy/tests/test-helper');
} else {
  require('dummy/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
